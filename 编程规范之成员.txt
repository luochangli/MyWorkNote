一、成员设计规范
方法、属性、事件、构造函数以及字段等统称为成员。

1、方法的重载规范
	①对应的参数名要相同
	②参数顺序一致
	③较短调用较长来实现，重载扩展需把长重载做成虚函数
	④允许可选参数为null

2、属性和方法的选择
	①方法表示操作，属性表示数据。若一样，优先使用属性。
	②逻辑为attribute，使用属性
	③该操作每次返回的结果不同，使用方法（不 DateTime.Now)
	④该操作有严重的副作用，使用方法

3、属性的设计规范
	①不改变属性的值，创建只读属性
	②要为所有属性提供合理的defaultValue，避免出现漏洞或低效率
	③允许用户以任何顺序设置属性的值
	④避免属性的获取方法抛出异常

4、构造函数的设计规范
	①提供简单的构造函数，最好是default，简单易用
	②考虑扩展性，如果构造函数设计的不自然，建议用静态
	  的工厂方法来替代构造函数
	③构造函数的参数设置成与属性名相同仅区分大小写
	④在构造函数中做最少的事，其他处理推迟到需要时
	⑤public声明构造函数
	⑥在构造函数中不调用虚成员

5、字段设计规范
	①不提供public或protected的字段、
	②常量字段来表示永远不会改变的量
	③用public static readonly 来定义预定义的对象实例

6、参数的设计规范
	①要用类结构层次最接近基类类型来作为参数的类型。
	②不使用保留参数
参数设计中枚举和布尔参数的选择规范
	①要用枚举。更强的可阅读性
参数验证的规范
	①要验证传给public、protected的参数是否合法。验证失败应
	  抛出System.ArgumentNullException或起子类
参数传递的规范
	①避免使用输出参数或引用参数